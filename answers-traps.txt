Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
a0, a1, a2.
a2.

Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
f and g are both called within this instruction:
li	a1,12
I think this is an inline function?

At what address is the function printf located?
0000000000000628

What value is in the register ra just after the jalr to printf in main?
0x38 to get back to the main function.

Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);

What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
He119 World.
Little endian means least significant bit is put on the lowest address.

In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);

It would be the value stored in register a2
